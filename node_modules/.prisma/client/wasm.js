
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  dni: 'dni',
  fechaNacimiento: 'fechaNacimiento',
  foto: 'foto',
  password: 'password',
  rol: 'rol',
  grupoId: 'grupoId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MedicationScalarFieldEnum = {
  id: 'id',
  commercialName: 'commercialName',
  activeIngredient: 'activeIngredient',
  description: 'description',
  intakeRecommendations: 'intakeRecommendations',
  imageUrl: 'imageUrl',
  initialQuantity: 'initialQuantity',
  currentQuantity: 'currentQuantity',
  unit: 'unit',
  expirationDate: 'expirationDate',
  archived: 'archived',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId'
};

exports.Prisma.NotificationSettingsScalarFieldEnum = {
  id: 'id',
  daysBeforeExpiration: 'daysBeforeExpiration',
  lowStockThreshold: 'lowStockThreshold',
  userId: 'userId'
};

exports.Prisma.TreatmentScalarFieldEnum = {
  id: 'id',
  name: 'name',
  patient: 'patient',
  patientId: 'patientId',
  patientType: 'patientType',
  symptoms: 'symptoms',
  startDate: 'startDate',
  endDate: 'endDate',
  isActive: 'isActive',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TreatmentMedicationScalarFieldEnum = {
  id: 'id',
  treatmentId: 'treatmentId',
  medicationId: 'medicationId',
  frequencyHours: 'frequencyHours',
  durationDays: 'durationDays',
  dosage: 'dosage',
  startDate: 'startDate',
  endDate: 'endDate',
  startAtSpecificTime: 'startAtSpecificTime',
  specificStartTime: 'specificStartTime',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TreatmentImageScalarFieldEnum = {
  id: 'id',
  treatmentId: 'treatmentId',
  imageUrl: 'imageUrl',
  imageType: 'imageType',
  extractedText: 'extractedText',
  aiAnalysis: 'aiAnalysis',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  treatmentId: 'treatmentId',
  scheduledDate: 'scheduledDate',
  sent: 'sent',
  type: 'type',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NotificationPreferencesScalarFieldEnum = {
  id: 'id',
  push: 'push',
  sound: 'sound',
  email: 'email',
  browser: 'browser',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PushSubscriptionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  endpoint: 'endpoint',
  p256dhKey: 'p256dhKey',
  authKey: 'authKey',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ShoppingItemScalarFieldEnum = {
  id: 'id',
  name: 'name',
  presentation: 'presentation',
  laboratory: 'laboratory',
  price: 'price',
  quantity: 'quantity',
  shoppingListId: 'shoppingListId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ShoppingListScalarFieldEnum = {
  id: 'id',
  name: 'name',
  total: 'total',
  isArchived: 'isArchived',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.GrupoFamiliarScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  creadorId: 'creadorId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PerfilMenorScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  dni: 'dni',
  fechaNacimiento: 'fechaNacimiento',
  foto: 'foto',
  grupoId: 'grupoId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TomaScalarFieldEnum = {
  id: 'id',
  medicamentoId: 'medicamentoId',
  consumidorUsuarioId: 'consumidorUsuarioId',
  consumidorPerfilId: 'consumidorPerfilId',
  registranteId: 'registranteId',
  fechaHora: 'fechaHora',
  grupoId: 'grupoId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.HistorialScalarFieldEnum = {
  id: 'id',
  usuarioId: 'usuarioId',
  tipoAccion: 'tipoAccion',
  entidadTipo: 'entidadTipo',
  entidadId: 'entidadId',
  datosPrevios: 'datosPrevios',
  datosPosteriores: 'datosPosteriores',
  metadata: 'metadata',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.UserRole = exports.$Enums.UserRole = {
  ADULTO: 'ADULTO',
  MENOR: 'MENOR'
};

exports.Prisma.ModelName = {
  User: 'User',
  Medication: 'Medication',
  NotificationSettings: 'NotificationSettings',
  Treatment: 'Treatment',
  TreatmentMedication: 'TreatmentMedication',
  TreatmentImage: 'TreatmentImage',
  Notification: 'Notification',
  NotificationPreferences: 'NotificationPreferences',
  PushSubscription: 'PushSubscription',
  ShoppingItem: 'ShoppingItem',
  ShoppingList: 'ShoppingList',
  GrupoFamiliar: 'GrupoFamiliar',
  PerfilMenor: 'PerfilMenor',
  Toma: 'Toma',
  Historial: 'Historial'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Usuario\\Desktop\\Botiquin\\med-manager\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\Usuario\\Desktop\\Botiquin\\med-manager\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": null,
        "value": "file:./dev.db"
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = \"file:./dev.db\"\n}\n\nmodel User {\n  id                      String                   @id @default(cuid())\n  email                   String                   @unique\n  name                    String?\n  dni                     String                   @unique\n  fechaNacimiento         DateTime\n  foto                    String?\n  password                String\n  rol                     UserRole                 @default(ADULTO)\n  grupoId                 String?\n  grupo                   GrupoFamiliar?           @relation(fields: [grupoId], references: [id])\n  createdAt               DateTime                 @default(now())\n  updatedAt               DateTime                 @updatedAt\n  medications             Medication[]\n  notificationSettings    NotificationSettings?\n  treatments              Treatment[] // Relación con tratamientos\n  notificationPreferences NotificationPreferences? // Relación con preferencias de notificaciones\n  pushSubscriptions       PushSubscription[] // Relación con suscripciones push\n  shoppingLists           ShoppingList[] // Relación con listas de compras\n  tomasRegistradas        Toma[]                   @relation(\"TomaRegistrante\")\n  tomasConsumidas         Toma[]                   @relation(\"TomaConsumidorUsuario\")\n  grupoCreado             GrupoFamiliar[]          @relation(\"GrupoCreador\")\n  historial               Historial[] // Relación con historial de auditoría\n}\n\nenum UserRole {\n  ADULTO\n  MENOR\n}\n\nmodel Medication {\n  id                    String                @id @default(cuid())\n  commercialName        String\n  activeIngredient      String?\n  description           String?\n  intakeRecommendations String?\n  imageUrl              String?\n  initialQuantity       Float\n  currentQuantity       Float\n  unit                  String // e.g., \"pills\", \"ml\"\n  expirationDate        DateTime\n  archived              Boolean               @default(false)\n  createdAt             DateTime              @default(now())\n  updatedAt             DateTime              @updatedAt\n  user                  User                  @relation(fields: [userId], references: [id])\n  userId                String\n  treatmentMedications  TreatmentMedication[] // Relación con medicamentos de tratamientos\n  tomas                 Toma[] // Relación con tomas de este medicamento\n}\n\nmodel NotificationSettings {\n  id                   String @id @default(cuid())\n  daysBeforeExpiration Int    @default(30)\n  lowStockThreshold    Float  @default(10)\n  user                 User   @relation(fields: [userId], references: [id])\n  userId               String @unique\n}\n\n// Modelo para tratamientos médicos\nmodel Treatment {\n  id            String                @id @default(cuid())\n  name          String\n  patient       String // Nombre del paciente (texto libre para compatibilidad)\n  patientId     String? // ID del paciente del grupo familiar (opcional)\n  patientType   String? // \"usuario\" o \"perfil\" - tipo de paciente seleccionado\n  symptoms      String? // Síntomas del paciente (opcional)\n  startDate     DateTime              @default(now())\n  endDate       DateTime // Fecha de finalización calculada\n  isActive      Boolean               @default(true)\n  user          User                  @relation(fields: [userId], references: [id])\n  userId        String\n  notifications Notification[] // Notificaciones asociadas al tratamiento\n  medications   TreatmentMedication[] // Medicamentos del tratamiento\n  images        TreatmentImage[] // Imágenes del tratamiento (recetas e instrucciones)\n  createdAt     DateTime              @default(now())\n  updatedAt     DateTime              @updatedAt\n}\n\n// Modelo para medicamentos dentro de un tratamiento (relación muchos a muchos)\nmodel TreatmentMedication {\n  id                  String     @id @default(cuid())\n  treatment           Treatment  @relation(fields: [treatmentId], references: [id])\n  treatmentId         String\n  medication          Medication @relation(fields: [medicationId], references: [id])\n  medicationId        String\n  frequencyHours      Int // Frecuencia en horas (ej: cada 8 horas)\n  durationDays        Int // Duración en días\n  dosage              String // Descripción de la dosis (ej: \"1 tableta\")\n  startDate           DateTime // Fecha de inicio específica para este medicamento\n  endDate             DateTime // Fecha de finalización específica para este medicamento\n  startAtSpecificTime Boolean    @default(false) // Si este medicamento comienza en una hora específica\n  specificStartTime   DateTime? // Hora específica de inicio para este medicamento\n  isActive            Boolean    @default(true)\n  createdAt           DateTime   @default(now())\n  updatedAt           DateTime   @updatedAt\n}\n\n// Modelo para imágenes de tratamientos (recetas e instrucciones)\nmodel TreatmentImage {\n  id            String    @id @default(cuid())\n  treatment     Treatment @relation(fields: [treatmentId], references: [id])\n  treatmentId   String\n  imageUrl      String // URL de la imagen almacenada\n  imageType     String // \"receta\" o \"instrucciones\"\n  extractedText String? // Texto extraído por IA\n  aiAnalysis    String? // Análisis estructurado de la IA\n  createdAt     DateTime  @default(now())\n  updatedAt     DateTime  @updatedAt\n}\n\n// Modelo para notificaciones de tratamientos\nmodel Notification {\n  id            String    @id @default(cuid())\n  treatment     Treatment @relation(fields: [treatmentId], references: [id])\n  treatmentId   String\n  scheduledDate DateTime // Fecha programada para la notificación\n  sent          Boolean   @default(false)\n  type          String // Tipo de notificación: push, sound, email, browser\n  createdAt     DateTime  @default(now())\n  updatedAt     DateTime  @updatedAt\n}\n\n// Modelo para preferencias de notificaciones del usuario\nmodel NotificationPreferences {\n  id        String   @id @default(cuid())\n  push      Boolean  @default(false)\n  sound     Boolean  @default(false)\n  email     Boolean  @default(false)\n  browser   Boolean  @default(false)\n  user      User     @relation(fields: [userId], references: [id])\n  userId    String   @unique\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\n// Modelo para suscripciones push\nmodel PushSubscription {\n  id        String   @id @default(cuid())\n  user      User     @relation(fields: [userId], references: [id])\n  userId    String\n  endpoint  String // URL del endpoint de push\n  p256dhKey String // Clave pública P256DH\n  authKey   String // Clave de autenticación\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@unique([userId, endpoint])\n}\n\n// Modelo para items de la lista de compras\nmodel ShoppingItem {\n  id             String       @id @default(cuid())\n  name           String\n  presentation   String?\n  laboratory     String?\n  price          Float\n  quantity       Int          @default(1)\n  shoppingList   ShoppingList @relation(fields: [shoppingListId], references: [id])\n  shoppingListId String\n  createdAt      DateTime     @default(now())\n  updatedAt      DateTime     @updatedAt\n}\n\n// Modelo para listas de compras\nmodel ShoppingList {\n  id         String         @id @default(cuid())\n  name       String\n  items      ShoppingItem[]\n  total      Float\n  isArchived Boolean        @default(false)\n  user       User           @relation(fields: [userId], references: [id])\n  userId     String\n  createdAt  DateTime       @default(now())\n  updatedAt  DateTime       @updatedAt\n}\n\n// Modelo para grupos familiares\nmodel GrupoFamiliar {\n  id              String        @id @default(cuid())\n  nombre          String\n  creadorId       String\n  creador         User          @relation(\"GrupoCreador\", fields: [creadorId], references: [id])\n  integrantes     User[] // Usuarios adultos y menores con cuenta\n  perfilesMenores PerfilMenor[] // Perfiles de menores sin cuenta\n  tomas           Toma[] // Todas las tomas del grupo\n  createdAt       DateTime      @default(now())\n  updatedAt       DateTime      @updatedAt\n}\n\n// Modelo para perfiles de menores sin cuenta\nmodel PerfilMenor {\n  id              String        @id @default(cuid())\n  nombre          String\n  dni             String        @unique\n  fechaNacimiento DateTime\n  foto            String?\n  grupoId         String\n  grupo           GrupoFamiliar @relation(fields: [grupoId], references: [id])\n  tomas           Toma[]        @relation(\"TomaPerfilMenor\")\n  createdAt       DateTime      @default(now())\n  updatedAt       DateTime      @updatedAt\n}\n\n// Modelo para tomas de medicamentos\nmodel Toma {\n  id                  String        @id @default(cuid())\n  medicamentoId       String\n  medicamento         Medication    @relation(fields: [medicamentoId], references: [id])\n  consumidorUsuarioId String? // Usuario que tomó el medicamento (adulto o menor con cuenta)\n  consumidorUsuario   User?         @relation(\"TomaConsumidorUsuario\", fields: [consumidorUsuarioId], references: [id])\n  consumidorPerfilId  String? // Perfil de menor sin cuenta que tomó el medicamento\n  consumidorPerfil    PerfilMenor?  @relation(\"TomaPerfilMenor\", fields: [consumidorPerfilId], references: [id])\n  registranteId       String // Usuario que registró la toma\n  registrante         User          @relation(\"TomaRegistrante\", fields: [registranteId], references: [id])\n  fechaHora           DateTime      @default(now())\n  grupoId             String\n  grupo               GrupoFamiliar @relation(fields: [grupoId], references: [id])\n  createdAt           DateTime      @default(now())\n  updatedAt           DateTime      @updatedAt\n}\n\n// Modelo para historial de auditoría\nmodel Historial {\n  id               String   @id @default(cuid())\n  usuarioId        String // Usuario que realizó la acción\n  usuario          User     @relation(fields: [usuarioId], references: [id])\n  tipoAccion       String // Tipo de acción: login, create, update, delete, search, etc.\n  entidadTipo      String // Tipo de entidad: usuario, perfil, medicamento, toma, lista_compra, tratamiento, etc.\n  entidadId        String? // ID del registro afectado (nullable si no aplica, ej: login)\n  datosPrevios     String? // JSON con el estado anterior (opcional)\n  datosPosteriores String? // JSON con el estado posterior (opcional)\n  metadata         String? // JSON con metadata adicional (IP, user-agent, etc.)\n  createdAt        DateTime @default(now())\n\n  @@index([usuarioId])\n  @@index([tipoAccion])\n  @@index([entidadTipo, entidadId])\n  @@index([createdAt])\n}\n",
  "inlineSchemaHash": "77509e82f1329074967f8d41421aafe1dad1ced19911cf15d14bbd472454b692",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dni\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fechaNacimiento\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"foto\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rol\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"grupoId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"grupo\",\"kind\":\"object\",\"type\":\"GrupoFamiliar\",\"relationName\":\"GrupoFamiliarToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"medications\",\"kind\":\"object\",\"type\":\"Medication\",\"relationName\":\"MedicationToUser\"},{\"name\":\"notificationSettings\",\"kind\":\"object\",\"type\":\"NotificationSettings\",\"relationName\":\"NotificationSettingsToUser\"},{\"name\":\"treatments\",\"kind\":\"object\",\"type\":\"Treatment\",\"relationName\":\"TreatmentToUser\"},{\"name\":\"notificationPreferences\",\"kind\":\"object\",\"type\":\"NotificationPreferences\",\"relationName\":\"NotificationPreferencesToUser\"},{\"name\":\"pushSubscriptions\",\"kind\":\"object\",\"type\":\"PushSubscription\",\"relationName\":\"PushSubscriptionToUser\"},{\"name\":\"shoppingLists\",\"kind\":\"object\",\"type\":\"ShoppingList\",\"relationName\":\"ShoppingListToUser\"},{\"name\":\"tomasRegistradas\",\"kind\":\"object\",\"type\":\"Toma\",\"relationName\":\"TomaRegistrante\"},{\"name\":\"tomasConsumidas\",\"kind\":\"object\",\"type\":\"Toma\",\"relationName\":\"TomaConsumidorUsuario\"},{\"name\":\"grupoCreado\",\"kind\":\"object\",\"type\":\"GrupoFamiliar\",\"relationName\":\"GrupoCreador\"},{\"name\":\"historial\",\"kind\":\"object\",\"type\":\"Historial\",\"relationName\":\"HistorialToUser\"}],\"dbName\":null},\"Medication\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"commercialName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"activeIngredient\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"intakeRecommendations\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"initialQuantity\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currentQuantity\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"unit\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expirationDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"archived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MedicationToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"treatmentMedications\",\"kind\":\"object\",\"type\":\"TreatmentMedication\",\"relationName\":\"MedicationToTreatmentMedication\"},{\"name\":\"tomas\",\"kind\":\"object\",\"type\":\"Toma\",\"relationName\":\"MedicationToToma\"}],\"dbName\":null},\"NotificationSettings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"daysBeforeExpiration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lowStockThreshold\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationSettingsToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Treatment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patient\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"symptoms\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TreatmentToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToTreatment\"},{\"name\":\"medications\",\"kind\":\"object\",\"type\":\"TreatmentMedication\",\"relationName\":\"TreatmentToTreatmentMedication\"},{\"name\":\"images\",\"kind\":\"object\",\"type\":\"TreatmentImage\",\"relationName\":\"TreatmentToTreatmentImage\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"TreatmentMedication\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"treatment\",\"kind\":\"object\",\"type\":\"Treatment\",\"relationName\":\"TreatmentToTreatmentMedication\"},{\"name\":\"treatmentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"medication\",\"kind\":\"object\",\"type\":\"Medication\",\"relationName\":\"MedicationToTreatmentMedication\"},{\"name\":\"medicationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"frequencyHours\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"durationDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dosage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"startAtSpecificTime\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"specificStartTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"TreatmentImage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"treatment\",\"kind\":\"object\",\"type\":\"Treatment\",\"relationName\":\"TreatmentToTreatmentImage\"},{\"name\":\"treatmentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"extractedText\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"aiAnalysis\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"treatment\",\"kind\":\"object\",\"type\":\"Treatment\",\"relationName\":\"NotificationToTreatment\"},{\"name\":\"treatmentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scheduledDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sent\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"NotificationPreferences\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"push\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"sound\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"browser\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationPreferencesToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PushSubscription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PushSubscriptionToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"endpoint\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"p256dhKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"authKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ShoppingItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"presentation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"laboratory\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"shoppingList\",\"kind\":\"object\",\"type\":\"ShoppingList\",\"relationName\":\"ShoppingItemToShoppingList\"},{\"name\":\"shoppingListId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ShoppingList\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"ShoppingItem\",\"relationName\":\"ShoppingItemToShoppingList\"},{\"name\":\"total\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"isArchived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ShoppingListToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"GrupoFamiliar\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creadorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creador\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GrupoCreador\"},{\"name\":\"integrantes\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GrupoFamiliarToUser\"},{\"name\":\"perfilesMenores\",\"kind\":\"object\",\"type\":\"PerfilMenor\",\"relationName\":\"GrupoFamiliarToPerfilMenor\"},{\"name\":\"tomas\",\"kind\":\"object\",\"type\":\"Toma\",\"relationName\":\"GrupoFamiliarToToma\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PerfilMenor\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dni\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fechaNacimiento\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"foto\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"grupoId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"grupo\",\"kind\":\"object\",\"type\":\"GrupoFamiliar\",\"relationName\":\"GrupoFamiliarToPerfilMenor\"},{\"name\":\"tomas\",\"kind\":\"object\",\"type\":\"Toma\",\"relationName\":\"TomaPerfilMenor\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Toma\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"medicamentoId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"medicamento\",\"kind\":\"object\",\"type\":\"Medication\",\"relationName\":\"MedicationToToma\"},{\"name\":\"consumidorUsuarioId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"consumidorUsuario\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TomaConsumidorUsuario\"},{\"name\":\"consumidorPerfilId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"consumidorPerfil\",\"kind\":\"object\",\"type\":\"PerfilMenor\",\"relationName\":\"TomaPerfilMenor\"},{\"name\":\"registranteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"registrante\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TomaRegistrante\"},{\"name\":\"fechaHora\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"grupoId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"grupo\",\"kind\":\"object\",\"type\":\"GrupoFamiliar\",\"relationName\":\"GrupoFamiliarToToma\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Historial\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"usuarioId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"usuario\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"HistorialToUser\"},{\"name\":\"tipoAccion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entidadTipo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entidadId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"datosPrevios\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"datosPosteriores\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {}
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

