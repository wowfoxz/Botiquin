
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  dni: 'dni',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  fechaNacimiento: 'fechaNacimiento',
  foto: 'foto',
  grupoId: 'grupoId',
  rol: 'rol'
};

exports.Prisma.MedicationScalarFieldEnum = {
  id: 'id',
  commercialName: 'commercialName',
  activeIngredient: 'activeIngredient',
  description: 'description',
  intakeRecommendations: 'intakeRecommendations',
  imageUrl: 'imageUrl',
  initialQuantity: 'initialQuantity',
  currentQuantity: 'currentQuantity',
  unit: 'unit',
  expirationDate: 'expirationDate',
  archived: 'archived',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId'
};

exports.Prisma.NotificationSettingsScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  daysBeforeExpiration: 'daysBeforeExpiration',
  lowStockThreshold: 'lowStockThreshold'
};

exports.Prisma.TreatmentScalarFieldEnum = {
  id: 'id',
  name: 'name',
  startDate: 'startDate',
  endDate: 'endDate',
  isActive: 'isActive',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  patient: 'patient',
  patientId: 'patientId',
  patientType: 'patientType',
  symptoms: 'symptoms'
};

exports.Prisma.TreatmentMedicationScalarFieldEnum = {
  id: 'id',
  treatmentId: 'treatmentId',
  medicationId: 'medicationId',
  frequencyHours: 'frequencyHours',
  durationDays: 'durationDays',
  dosage: 'dosage',
  startAtSpecificTime: 'startAtSpecificTime',
  specificStartTime: 'specificStartTime',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  endDate: 'endDate',
  isActive: 'isActive',
  startDate: 'startDate'
};

exports.Prisma.TreatmentImageScalarFieldEnum = {
  id: 'id',
  treatmentId: 'treatmentId',
  imageUrl: 'imageUrl',
  imageType: 'imageType',
  createdAt: 'createdAt',
  aiAnalysis: 'aiAnalysis',
  extractedText: 'extractedText',
  updatedAt: 'updatedAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  treatmentId: 'treatmentId',
  scheduledDate: 'scheduledDate',
  sent: 'sent',
  type: 'type',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NotificationPreferencesScalarFieldEnum = {
  id: 'id',
  push: 'push',
  sound: 'sound',
  email: 'email',
  browser: 'browser',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PushSubscriptionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  endpoint: 'endpoint',
  p256dhKey: 'p256dhKey',
  authKey: 'authKey',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ShoppingItemScalarFieldEnum = {
  id: 'id',
  name: 'name',
  presentation: 'presentation',
  laboratory: 'laboratory',
  price: 'price',
  quantity: 'quantity',
  shoppingListId: 'shoppingListId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ShoppingListScalarFieldEnum = {
  id: 'id',
  name: 'name',
  total: 'total',
  isArchived: 'isArchived',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.GrupoFamiliarScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  creadorId: 'creadorId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PerfilMenorScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  dni: 'dni',
  fechaNacimiento: 'fechaNacimiento',
  foto: 'foto',
  grupoId: 'grupoId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TomaScalarFieldEnum = {
  id: 'id',
  medicamentoId: 'medicamentoId',
  consumidorUsuarioId: 'consumidorUsuarioId',
  consumidorPerfilId: 'consumidorPerfilId',
  registranteId: 'registranteId',
  fechaHora: 'fechaHora',
  grupoId: 'grupoId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.HistorialScalarFieldEnum = {
  id: 'id',
  usuarioId: 'usuarioId',
  tipoAccion: 'tipoAccion',
  entidadTipo: 'entidadTipo',
  entidadId: 'entidadId',
  datosPrevios: 'datosPrevios',
  datosPosteriores: 'datosPosteriores',
  metadata: 'metadata',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  dni: 'dni',
  password: 'password',
  foto: 'foto',
  grupoId: 'grupoId'
};

exports.Prisma.MedicationOrderByRelevanceFieldEnum = {
  id: 'id',
  commercialName: 'commercialName',
  activeIngredient: 'activeIngredient',
  description: 'description',
  intakeRecommendations: 'intakeRecommendations',
  imageUrl: 'imageUrl',
  unit: 'unit',
  userId: 'userId'
};

exports.Prisma.NotificationSettingsOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId'
};

exports.Prisma.TreatmentOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  userId: 'userId',
  patient: 'patient',
  patientId: 'patientId',
  patientType: 'patientType',
  symptoms: 'symptoms'
};

exports.Prisma.TreatmentMedicationOrderByRelevanceFieldEnum = {
  id: 'id',
  treatmentId: 'treatmentId',
  medicationId: 'medicationId',
  dosage: 'dosage'
};

exports.Prisma.TreatmentImageOrderByRelevanceFieldEnum = {
  id: 'id',
  treatmentId: 'treatmentId',
  imageUrl: 'imageUrl',
  imageType: 'imageType',
  aiAnalysis: 'aiAnalysis',
  extractedText: 'extractedText'
};

exports.Prisma.NotificationOrderByRelevanceFieldEnum = {
  id: 'id',
  treatmentId: 'treatmentId',
  type: 'type'
};

exports.Prisma.NotificationPreferencesOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId'
};

exports.Prisma.PushSubscriptionOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  endpoint: 'endpoint',
  p256dhKey: 'p256dhKey',
  authKey: 'authKey'
};

exports.Prisma.ShoppingItemOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  presentation: 'presentation',
  laboratory: 'laboratory',
  shoppingListId: 'shoppingListId'
};

exports.Prisma.ShoppingListOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  userId: 'userId'
};

exports.Prisma.GrupoFamiliarOrderByRelevanceFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  creadorId: 'creadorId'
};

exports.Prisma.PerfilMenorOrderByRelevanceFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  dni: 'dni',
  foto: 'foto',
  grupoId: 'grupoId'
};

exports.Prisma.TomaOrderByRelevanceFieldEnum = {
  id: 'id',
  medicamentoId: 'medicamentoId',
  consumidorUsuarioId: 'consumidorUsuarioId',
  consumidorPerfilId: 'consumidorPerfilId',
  registranteId: 'registranteId',
  grupoId: 'grupoId'
};

exports.Prisma.HistorialOrderByRelevanceFieldEnum = {
  id: 'id',
  usuarioId: 'usuarioId',
  tipoAccion: 'tipoAccion',
  entidadTipo: 'entidadTipo',
  entidadId: 'entidadId',
  datosPrevios: 'datosPrevios',
  datosPosteriores: 'datosPosteriores',
  metadata: 'metadata'
};
exports.UserRole = exports.$Enums.UserRole = {
  ADULTO: 'ADULTO',
  MENOR: 'MENOR'
};

exports.Prisma.ModelName = {
  User: 'User',
  Medication: 'Medication',
  NotificationSettings: 'NotificationSettings',
  Treatment: 'Treatment',
  TreatmentMedication: 'TreatmentMedication',
  TreatmentImage: 'TreatmentImage',
  Notification: 'Notification',
  NotificationPreferences: 'NotificationPreferences',
  PushSubscription: 'PushSubscription',
  ShoppingItem: 'ShoppingItem',
  ShoppingList: 'ShoppingList',
  GrupoFamiliar: 'GrupoFamiliar',
  PerfilMenor: 'PerfilMenor',
  Toma: 'Toma',
  Historial: 'Historial'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Usuario\\Desktop\\Botiquin\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\Usuario\\Desktop\\Botiquin\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id                      String                   @id @default(cuid())\n  email                   String                   @unique\n  name                    String?\n  dni                     String                   @unique\n  password                String\n  createdAt               DateTime                 @default(now())\n  updatedAt               DateTime                 @updatedAt\n  fechaNacimiento         DateTime\n  foto                    String?                  @db.LongText\n  grupoId                 String?\n  rol                     UserRole                 @default(ADULTO)\n  grupoCreado             GrupoFamiliar[]          @relation(\"GrupoCreador\")\n  historial               Historial[]\n  medications             Medication[]\n  notificationPreferences NotificationPreferences?\n  notificationSettings    NotificationSettings?\n  pushSubscriptions       PushSubscription[]\n  shoppingLists           ShoppingList[]\n  tomasConsumidas         Toma[]                   @relation(\"TomaConsumidorUsuario\")\n  tomasRegistradas        Toma[]                   @relation(\"TomaRegistrante\")\n  treatments              Treatment[]\n  grupo                   GrupoFamiliar?           @relation(fields: [grupoId], references: [id])\n\n  @@index([grupoId], map: \"User_grupoId_fkey\")\n}\n\nmodel Medication {\n  id                    String                @id @default(cuid())\n  commercialName        String\n  activeIngredient      String?\n  description           String?\n  intakeRecommendations String?\n  imageUrl              String?\n  initialQuantity       Float\n  currentQuantity       Float\n  unit                  String\n  expirationDate        DateTime\n  archived              Boolean               @default(false)\n  createdAt             DateTime              @default(now())\n  updatedAt             DateTime              @updatedAt\n  userId                String\n  user                  User                  @relation(fields: [userId], references: [id])\n  tomas                 Toma[]\n  treatmentMedications  TreatmentMedication[]\n\n  @@index([userId], map: \"Medication_userId_fkey\")\n}\n\nmodel NotificationSettings {\n  id                   String @id @default(cuid())\n  userId               String @unique\n  daysBeforeExpiration Int    @default(30)\n  lowStockThreshold    Float  @default(10)\n  user                 User   @relation(fields: [userId], references: [id])\n}\n\nmodel Treatment {\n  id            String                @id @default(cuid())\n  name          String\n  startDate     DateTime              @default(now())\n  endDate       DateTime\n  isActive      Boolean               @default(true)\n  userId        String\n  createdAt     DateTime              @default(now())\n  updatedAt     DateTime              @updatedAt\n  patient       String\n  patientId     String?\n  patientType   String?\n  symptoms      String?\n  notifications Notification[]\n  user          User                  @relation(fields: [userId], references: [id])\n  images        TreatmentImage[]\n  medications   TreatmentMedication[]\n\n  @@index([userId], map: \"Treatment_userId_fkey\")\n}\n\nmodel TreatmentMedication {\n  id                  String     @id @default(cuid())\n  treatmentId         String\n  medicationId        String\n  frequencyHours      Int\n  durationDays        Int\n  dosage              String\n  startAtSpecificTime Boolean    @default(false)\n  specificStartTime   DateTime?\n  createdAt           DateTime   @default(now())\n  updatedAt           DateTime   @updatedAt\n  endDate             DateTime\n  isActive            Boolean    @default(true)\n  startDate           DateTime\n  medication          Medication @relation(fields: [medicationId], references: [id])\n  treatment           Treatment  @relation(fields: [treatmentId], references: [id])\n\n  @@index([medicationId], map: \"TreatmentMedication_medicationId_fkey\")\n  @@index([treatmentId], map: \"TreatmentMedication_treatmentId_fkey\")\n}\n\nmodel TreatmentImage {\n  id            String    @id @default(cuid())\n  treatmentId   String\n  imageUrl      String\n  imageType     String\n  createdAt     DateTime  @default(now())\n  aiAnalysis    String?   @db.LongText\n  extractedText String?   @db.LongText\n  updatedAt     DateTime  @updatedAt\n  treatment     Treatment @relation(fields: [treatmentId], references: [id])\n\n  @@index([treatmentId], map: \"TreatmentImage_treatmentId_fkey\")\n}\n\nmodel Notification {\n  id            String    @id @default(cuid())\n  treatmentId   String\n  scheduledDate DateTime\n  sent          Boolean   @default(false)\n  type          String\n  createdAt     DateTime  @default(now())\n  updatedAt     DateTime  @updatedAt\n  treatment     Treatment @relation(fields: [treatmentId], references: [id])\n\n  @@index([treatmentId], map: \"Notification_treatmentId_fkey\")\n}\n\nmodel NotificationPreferences {\n  id        String   @id @default(cuid())\n  push      Boolean  @default(false)\n  sound     Boolean  @default(false)\n  email     Boolean  @default(false)\n  browser   Boolean  @default(false)\n  userId    String   @unique\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  user      User     @relation(fields: [userId], references: [id])\n}\n\nmodel PushSubscription {\n  id        String   @id @default(cuid())\n  userId    String\n  endpoint  String\n  p256dhKey String\n  authKey   String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  user      User     @relation(fields: [userId], references: [id])\n\n  @@unique([userId, endpoint])\n}\n\nmodel ShoppingItem {\n  id             String       @id @default(cuid())\n  name           String\n  presentation   String?\n  laboratory     String?\n  price          Float\n  quantity       Int          @default(1)\n  shoppingListId String\n  createdAt      DateTime     @default(now())\n  updatedAt      DateTime     @updatedAt\n  shoppingList   ShoppingList @relation(fields: [shoppingListId], references: [id])\n\n  @@index([shoppingListId], map: \"ShoppingItem_shoppingListId_fkey\")\n}\n\nmodel ShoppingList {\n  id         String         @id @default(cuid())\n  name       String\n  total      Float\n  isArchived Boolean        @default(false)\n  userId     String\n  createdAt  DateTime       @default(now())\n  updatedAt  DateTime       @updatedAt\n  items      ShoppingItem[]\n  user       User           @relation(fields: [userId], references: [id])\n\n  @@index([userId], map: \"ShoppingList_userId_fkey\")\n}\n\nmodel GrupoFamiliar {\n  id              String        @id @default(cuid())\n  nombre          String\n  creadorId       String\n  createdAt       DateTime      @default(now())\n  updatedAt       DateTime      @updatedAt\n  creador         User          @relation(\"GrupoCreador\", fields: [creadorId], references: [id])\n  perfilesMenores PerfilMenor[]\n  tomas           Toma[]\n  integrantes     User[]\n\n  @@index([creadorId], map: \"GrupoFamiliar_creadorId_fkey\")\n}\n\nmodel PerfilMenor {\n  id              String        @id @default(cuid())\n  nombre          String\n  dni             String        @unique\n  fechaNacimiento DateTime\n  foto            String?\n  grupoId         String\n  createdAt       DateTime      @default(now())\n  updatedAt       DateTime      @updatedAt\n  grupo           GrupoFamiliar @relation(fields: [grupoId], references: [id])\n  tomas           Toma[]        @relation(\"TomaPerfilMenor\")\n\n  @@index([grupoId], map: \"PerfilMenor_grupoId_fkey\")\n}\n\nmodel Toma {\n  id                  String        @id @default(cuid())\n  medicamentoId       String\n  consumidorUsuarioId String?\n  consumidorPerfilId  String?\n  registranteId       String\n  fechaHora           DateTime      @default(now())\n  grupoId             String\n  createdAt           DateTime      @default(now())\n  updatedAt           DateTime      @updatedAt\n  consumidorPerfil    PerfilMenor?  @relation(\"TomaPerfilMenor\", fields: [consumidorPerfilId], references: [id])\n  consumidorUsuario   User?         @relation(\"TomaConsumidorUsuario\", fields: [consumidorUsuarioId], references: [id])\n  grupo               GrupoFamiliar @relation(fields: [grupoId], references: [id])\n  medicamento         Medication    @relation(fields: [medicamentoId], references: [id])\n  registrante         User          @relation(\"TomaRegistrante\", fields: [registranteId], references: [id])\n\n  @@index([consumidorPerfilId], map: \"Toma_consumidorPerfilId_fkey\")\n  @@index([consumidorUsuarioId], map: \"Toma_consumidorUsuarioId_fkey\")\n  @@index([grupoId], map: \"Toma_grupoId_fkey\")\n  @@index([medicamentoId], map: \"Toma_medicamentoId_fkey\")\n  @@index([registranteId], map: \"Toma_registranteId_fkey\")\n}\n\nmodel Historial {\n  id               String   @id @default(cuid())\n  usuarioId        String\n  tipoAccion       String\n  entidadTipo      String\n  entidadId        String?\n  datosPrevios     String?  @db.LongText\n  datosPosteriores String?  @db.LongText\n  metadata         String?  @db.LongText\n  createdAt        DateTime @default(now())\n  usuario          User     @relation(fields: [usuarioId], references: [id])\n\n  @@index([usuarioId])\n  @@index([tipoAccion])\n  @@index([entidadTipo, entidadId])\n  @@index([createdAt])\n}\n\nenum UserRole {\n  ADULTO\n  MENOR\n}\n",
  "inlineSchemaHash": "ca4899d7ced8b601ea5ee22db97b19a569a80a7531a10f4f47ea264441f90a4c",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dni\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"fechaNacimiento\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"foto\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"grupoId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rol\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"grupoCreado\",\"kind\":\"object\",\"type\":\"GrupoFamiliar\",\"relationName\":\"GrupoCreador\"},{\"name\":\"historial\",\"kind\":\"object\",\"type\":\"Historial\",\"relationName\":\"HistorialToUser\"},{\"name\":\"medications\",\"kind\":\"object\",\"type\":\"Medication\",\"relationName\":\"MedicationToUser\"},{\"name\":\"notificationPreferences\",\"kind\":\"object\",\"type\":\"NotificationPreferences\",\"relationName\":\"NotificationPreferencesToUser\"},{\"name\":\"notificationSettings\",\"kind\":\"object\",\"type\":\"NotificationSettings\",\"relationName\":\"NotificationSettingsToUser\"},{\"name\":\"pushSubscriptions\",\"kind\":\"object\",\"type\":\"PushSubscription\",\"relationName\":\"PushSubscriptionToUser\"},{\"name\":\"shoppingLists\",\"kind\":\"object\",\"type\":\"ShoppingList\",\"relationName\":\"ShoppingListToUser\"},{\"name\":\"tomasConsumidas\",\"kind\":\"object\",\"type\":\"Toma\",\"relationName\":\"TomaConsumidorUsuario\"},{\"name\":\"tomasRegistradas\",\"kind\":\"object\",\"type\":\"Toma\",\"relationName\":\"TomaRegistrante\"},{\"name\":\"treatments\",\"kind\":\"object\",\"type\":\"Treatment\",\"relationName\":\"TreatmentToUser\"},{\"name\":\"grupo\",\"kind\":\"object\",\"type\":\"GrupoFamiliar\",\"relationName\":\"GrupoFamiliarToUser\"}],\"dbName\":null},\"Medication\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"commercialName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"activeIngredient\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"intakeRecommendations\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"initialQuantity\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currentQuantity\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"unit\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expirationDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"archived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MedicationToUser\"},{\"name\":\"tomas\",\"kind\":\"object\",\"type\":\"Toma\",\"relationName\":\"MedicationToToma\"},{\"name\":\"treatmentMedications\",\"kind\":\"object\",\"type\":\"TreatmentMedication\",\"relationName\":\"MedicationToTreatmentMedication\"}],\"dbName\":null},\"NotificationSettings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"daysBeforeExpiration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lowStockThreshold\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationSettingsToUser\"}],\"dbName\":null},\"Treatment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"patient\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"symptoms\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToTreatment\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TreatmentToUser\"},{\"name\":\"images\",\"kind\":\"object\",\"type\":\"TreatmentImage\",\"relationName\":\"TreatmentToTreatmentImage\"},{\"name\":\"medications\",\"kind\":\"object\",\"type\":\"TreatmentMedication\",\"relationName\":\"TreatmentToTreatmentMedication\"}],\"dbName\":null},\"TreatmentMedication\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"treatmentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"medicationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"frequencyHours\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"durationDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dosage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startAtSpecificTime\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"specificStartTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"medication\",\"kind\":\"object\",\"type\":\"Medication\",\"relationName\":\"MedicationToTreatmentMedication\"},{\"name\":\"treatment\",\"kind\":\"object\",\"type\":\"Treatment\",\"relationName\":\"TreatmentToTreatmentMedication\"}],\"dbName\":null},\"TreatmentImage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"treatmentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"aiAnalysis\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"extractedText\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"treatment\",\"kind\":\"object\",\"type\":\"Treatment\",\"relationName\":\"TreatmentToTreatmentImage\"}],\"dbName\":null},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"treatmentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scheduledDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sent\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"treatment\",\"kind\":\"object\",\"type\":\"Treatment\",\"relationName\":\"NotificationToTreatment\"}],\"dbName\":null},\"NotificationPreferences\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"push\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"sound\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"browser\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationPreferencesToUser\"}],\"dbName\":null},\"PushSubscription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"endpoint\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"p256dhKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"authKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PushSubscriptionToUser\"}],\"dbName\":null},\"ShoppingItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"presentation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"laboratory\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"shoppingListId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"shoppingList\",\"kind\":\"object\",\"type\":\"ShoppingList\",\"relationName\":\"ShoppingItemToShoppingList\"}],\"dbName\":null},\"ShoppingList\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"total\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"isArchived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"ShoppingItem\",\"relationName\":\"ShoppingItemToShoppingList\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ShoppingListToUser\"}],\"dbName\":null},\"GrupoFamiliar\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creadorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"creador\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GrupoCreador\"},{\"name\":\"perfilesMenores\",\"kind\":\"object\",\"type\":\"PerfilMenor\",\"relationName\":\"GrupoFamiliarToPerfilMenor\"},{\"name\":\"tomas\",\"kind\":\"object\",\"type\":\"Toma\",\"relationName\":\"GrupoFamiliarToToma\"},{\"name\":\"integrantes\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GrupoFamiliarToUser\"}],\"dbName\":null},\"PerfilMenor\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dni\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fechaNacimiento\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"foto\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"grupoId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"grupo\",\"kind\":\"object\",\"type\":\"GrupoFamiliar\",\"relationName\":\"GrupoFamiliarToPerfilMenor\"},{\"name\":\"tomas\",\"kind\":\"object\",\"type\":\"Toma\",\"relationName\":\"TomaPerfilMenor\"}],\"dbName\":null},\"Toma\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"medicamentoId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"consumidorUsuarioId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"consumidorPerfilId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"registranteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fechaHora\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"grupoId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"consumidorPerfil\",\"kind\":\"object\",\"type\":\"PerfilMenor\",\"relationName\":\"TomaPerfilMenor\"},{\"name\":\"consumidorUsuario\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TomaConsumidorUsuario\"},{\"name\":\"grupo\",\"kind\":\"object\",\"type\":\"GrupoFamiliar\",\"relationName\":\"GrupoFamiliarToToma\"},{\"name\":\"medicamento\",\"kind\":\"object\",\"type\":\"Medication\",\"relationName\":\"MedicationToToma\"},{\"name\":\"registrante\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TomaRegistrante\"}],\"dbName\":null},\"Historial\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"usuarioId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tipoAccion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entidadTipo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entidadId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"datosPrevios\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"datosPosteriores\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"usuario\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"HistorialToUser\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

