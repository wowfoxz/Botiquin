// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/botiquin" | "/botiquin/precios" | "/configuracion" | "/configuracion/grupo-familiar" | "/configuracion/grupo-familiar/agregar-adulto" | "/configuracion/grupo-familiar/agregar-menor" | "/configuracion/grupo-familiar/editar-perfil/[id]" | "/configuracion/grupo-familiar/editar-usuario/[id]" | "/historial" | "/lista-compras" | "/login" | "/medications/archived" | "/medications/new" | "/medications/new/manual" | "/medications/new/upload" | "/register" | "/tratamientos" | "/tratamientos/editar/[id]" | "/tratamientos/nuevo"
type AppRouteHandlerRoutes = "/api/auth" | "/api/auth/logout" | "/api/auth/refresh" | "/api/consumidores-grupo" | "/api/grupo-familiar" | "/api/health" | "/api/historial" | "/api/historial/export" | "/api/lista-compras" | "/api/lista-compras/[id]" | "/api/medicamentos" | "/api/medicamentos-grupo" | "/api/medicinas" | "/api/notificaciones" | "/api/notifications/process" | "/api/notifications/subscribe" | "/api/notifications/unsubscribe" | "/api/perfil/[id]" | "/api/preferencias-notificaciones" | "/api/preferencias-notificaciones/[userId]" | "/api/tratamientos" | "/api/tratamientos/[id]" | "/api/tratamientos/[id]/images" | "/api/tratamientos/[id]/medications" | "/api/tratamientos/analyze-image" | "/api/tratamientos/upload-image" | "/api/usuario/[id]"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api/auth": {}
  "/api/auth/logout": {}
  "/api/auth/refresh": {}
  "/api/consumidores-grupo": {}
  "/api/grupo-familiar": {}
  "/api/health": {}
  "/api/historial": {}
  "/api/historial/export": {}
  "/api/lista-compras": {}
  "/api/lista-compras/[id]": { "id": string; }
  "/api/medicamentos": {}
  "/api/medicamentos-grupo": {}
  "/api/medicinas": {}
  "/api/notificaciones": {}
  "/api/notifications/process": {}
  "/api/notifications/subscribe": {}
  "/api/notifications/unsubscribe": {}
  "/api/perfil/[id]": { "id": string; }
  "/api/preferencias-notificaciones": {}
  "/api/preferencias-notificaciones/[userId]": { "userId": string; }
  "/api/tratamientos": {}
  "/api/tratamientos/[id]": { "id": string; }
  "/api/tratamientos/[id]/images": { "id": string; }
  "/api/tratamientos/[id]/medications": { "id": string; }
  "/api/tratamientos/analyze-image": {}
  "/api/tratamientos/upload-image": {}
  "/api/usuario/[id]": { "id": string; }
  "/botiquin": {}
  "/botiquin/precios": {}
  "/configuracion": {}
  "/configuracion/grupo-familiar": {}
  "/configuracion/grupo-familiar/agregar-adulto": {}
  "/configuracion/grupo-familiar/agregar-menor": {}
  "/configuracion/grupo-familiar/editar-perfil/[id]": { "id": string; }
  "/configuracion/grupo-familiar/editar-usuario/[id]": { "id": string; }
  "/historial": {}
  "/lista-compras": {}
  "/login": {}
  "/medications/archived": {}
  "/medications/new": {}
  "/medications/new/manual": {}
  "/medications/new/upload": {}
  "/register": {}
  "/tratamientos": {}
  "/tratamientos/editar/[id]": { "id": string; }
  "/tratamientos/nuevo": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
